이 서브젝트의 핵심을 표현하라고 한다면...
[스크린샷]
이렇게 표현할 수 있겠다.

n중 반복문을 오로지 반복문 만으로 구현하려면 소스도 지저분해질 뿐 더러 관리도 힘들다.

00서브젝트에서 에서 depth에 대해 감을 잡았을수도, 못잡았을 수도 있는데,
중첩 포문에서도 depth를 발견할 수 있다.

함수의 depth로 반복문의 깊이를 관리하고,
재귀함수 내부에 있는 반복문을 통해 반복문의 index를 관리하면 구현하기가 쉬워진다.


01번
for 1 to n
  for 1 to n
    ...(m)
의 구조를 가지고 있는 M중 반복문이다.

00번
for d to n
  for d1 to n       d1 = d
    for d2 to n     d2 = d1
      ...(m)
의 구조로, depth - 1 의 인덱스를 가져온다.

02번
for d to n
  for d1 to n       d1 = d + 1
    for d2 to n     d2 = d1 + 1
      ...(m)

03번
for 1 to n
  for 1 to n
    ...(m)
이 문제는 출력해야 하는 데이터set이 permutation이다.
그리하여, 숫자가 중복되지 않게끔 visit배열을 이용하여 next_permutation을 구한다.

