// type traits (is_integral, enable_if)
// iterator traits (cpp reference)
// algorithm (equal, comp)

// random_access_iterator
// reverse_iterator

// vector -> stack

// pair

// tree, tree_node, tree_util, tree_iterator (RBTree, AVL)

// map -> set(RBTree)


1번 functor 공부
2번 enable_if, is_integral (둘다 펑터를 이용해 구현)
3번 swap(이건 너무 쉬움)
4번 iterator_traits 구현
5번 random_access_iterator 구현
6번 reverse_iterator 구현
7번 vector 구현
8번 stack 구현
9번 tree iterator 구현
10번 tree 구현
11번 map구현

https://www.learncpp.com/
https://www.cplusplus.com/reference/stl/
https://github.com/PracticeofEno/ft_container 
https://www.notion.so/LIST-bdb189e5ebd5486f8dc9ff32c4d02f45
https://carnation-visage-cc7.notion.site/ft_containers-fabfdb4bdcce4f139c900737acbb04ff

ms 번역본 https://docs.microsoft.com/ko-kr/cpp/standard-library/stl-containers?view=msvc-160

STL 라이브러리 https://modoocode.com/174


Vector
List
Map
Stack
Queue


<보너스>
Deque
Set
Multiset
Multimap


https://carnation-visage-cc7.notion.site/Vector-346d3d321c014fd0adccaa7c3f44397e
https://www.notion.so/7518b3d8ef954b4abd1e7126e90e19e5